getFeedData({"responseData": {"feed":{"feedUrl":"http://nodeprime.blogspot.com//feeds/posts/default","title":"NodePrime Blog","link":"http://nodeprime.blogspot.com/","author":"Nathan Rockhold","description":"","type":"atom10","entries":[{"title":"Open Compute: Hello OCP, goodbye HP?","link":"http://nodeprime.blogspot.com/2013/04/opencompute-is-real-goodbye-dell-hp.html","author":"James Malachowski","publishedDate":"Mon, 22 Apr 2013 09:52:00 -0700","contentSnippet":"This is our first post in a series of posts around Open Compute, the open-source compute platform developed by the team at ...","content":"\u003ci\u003eThis is our first post in a series of posts around \u003ca href\u003d\"http://www.opencompute.org/\"\u003eOpen Compute\u003c/a\u003e, the open-source compute platform developed by the \u003ca href\u003d\"http://www.opencompute.org/about/\"\u003eteam at Facebook\u003c/a\u003e.\u003c/i\u003e\u003cbr\u003e\u003cbr\u003eX86 servers are a commodity right? The big server vendors have been fighting against this trend for years. They've been desperately adding \"value\" into commodity X86 infrastructure by adding bloated software features, LED panels, and complex networking in the interest of differentiating their platforms against the competition. Our customers have been dissatisfied with these platforms for years - they are too expensive, contain features they don't want, and consume too much power. With the rise of Open Compute, it seems there may finally be a valid alternative.\u003cbr\u003e\u003cbr\u003e\u003ch3\u003eA Brief History on Open Compute: The Untold Story\u003c/h3\u003eA little over 5 years ago, Forrest Norrod and the team over at Dell saw an opportunity to develop customized infrastructure designed for web-scale environments. Tracking the growth trends of customers like Facebook, Amazon, Microsoft, and others, Dell realized the standard product they were building was not meeting the needs of these \"hyperscale\" environments. These customers were keen on minimizing features to reduce upfront costs, increase density, and lower power consumption, all in the interest of reducing the total cost of ownership of operating datacenters at such a massive scale. Driving down total cost of ownership is how companies like Facebook can offer you Facebook for free and still churn a profit. \u003cbr\u003e\u003cbr\u003eDell's business plan with DCS was to come into a customer, understand their unique pain points, and build a one-off, custom solution to address it. Over time, consistencies between designs began to emerge, and Dell launched the PowerEdge C product line, designed as a \"tweener\" - somewhere between the mainstream product and the heavy customization that DCS offered. Dell was able to capitalize on this opportunity and built a multi-billion  dollar business \u003ca href\u003d\"http://gigaom.com/2012/10/30/dell-has-sold-1m-webscale-servers-in-five-years/\"\u003eshipping over a million servers as of 2012\u003c/a\u003e. \u003cbr\u003e\u003cbr\u003eOver time some issues arose with this business model: \u003cbr\u003e\u003col\u003e\u003cli\u003e\u003cb\u003eCustom Servers - \u003c/b\u003eCustom usually means expensive, and in the case of hardware, it means long lead times. The extreme growth patterns and rapid bursts in capacity requirements made a 12+ week lead time unacceptable, especially considering that Intel and others were launching new CPU's every 18 months. \u003c/li\u003e\u003cli\u003e\u003cb\u003eFast Followers\u003c/b\u003e - In any fast growing market, new competitors will arise to provide a lower-cost alternative. Companies like SGI, Hyve, and others emerged that had the relationships with ODM's to offer the same customized experience. To make matters even worse, the ODM's (Quanta, etc) got into the business completely cutting out the middle man, and offering the commodity purchasing scale of all the larger vendors, further driving down acquisition costs.\u003cbr\u003e\u003cb\u003e\u003cbr\u003e\u003c/b\u003e\u003c/li\u003e\u003cli\u003e\u003cb\u003eMore Customers\u003c/b\u003eMore and more companies were reaching the compute requirements and scale of Facebook/Amazon/Microsoft and were interested in similar solutions, further increasing demand, and further enhancing the business of the low-cost alternatives presented by Quanta, Hyve and others.\u003c/li\u003e\u003c/ol\u003eTaking all of this one step further, the team at Facebook (led by Frank Frankovsky, who just happened to be a part of the DCS team at Dell prior to joining Facebook) \u003ca href\u003d\"http://www.opencompute.org/about/\"\u003elaunched Open Compute\u003c/a\u003e, attempting to disrupt proprietary hardware designs and encourage innovation the same way open source software has done for the web the last several years.\u003cbr\u003e\u003ch3\u003eThe Open Compute Experience \u003c/h3\u003eThanks to our friends over at \u003ca href\u003d\"http://www.rorke.com/industries/cloud/ocp\"\u003eAvnet\u003c/a\u003e, we just received an Open Compute \"Freedom\" chassis containing two of the \"Windmill\" systems for testing out our platform. Right off the bat, we new things were going to be different with these systems. \u003cbr\u003e\u003cbr\u003e\u003ctable cellpadding\u003d\"0\" cellspacing\u003d\"0\" style\u003d\"float:left;margin-right:1em;text-align:left\"\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd style\u003d\"text-align:center\"\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/-RFyH0T3mRlA/UW7lAReEmhI/AAAAAAAAAmc/HAvruD5mbS0/s1600/OCP_FREEDOM.JPG\" style\u003d\"clear:left;margin-bottom:1em;margin-left:auto;margin-right:auto\"\u003e\u003cimg border\u003d\"0\" src\u003d\"http://1.bp.blogspot.com/-RFyH0T3mRlA/UW7lAReEmhI/AAAAAAAAAmc/HAvruD5mbS0/s1600/OCP_FREEDOM.JPG\" height\u003d\"480\" width\u003d\"640\"\u003e\u003c/a\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd style\u003d\"text-align:center\"\u003eOpen Compute \"Freedom\" Chassis with two \"Windmill\" Compute Nodes\u003c/td\u003e\u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003eOne of the first things we noticed was how light the system was. When you are shipping massive quantities of systems from overseas, you can start to understand the gravity of saving a few lbs/server - it can literally save hundreds of thousands of dollars on shipping costs over time. Not to mention how much easier these systems will be to handle when placing them into a rack. All of these minute optimizations add up to significant savings at scale from both a capital and operations perspective.\u003cbr\u003e\u003cbr\u003eThere are a few items that will make this platform difficult to consume in the beginning - first and foremost the \"slightly larger than a 19-inch rack design\". While some proponents of OCP claim much better airflow/design and improved installation procedures, we believe this may be a classic ploy for the \"forklift upgrade\" by the likes of Damac and others (who happen to be avid supporters of OCP) - get everyone excited about a new platform that forces them to replace and rethink everything they already have invested in. Sure, \u003ca href\u003d\"http://www.opencompute.org/2012/10/24/deploying-ocp-hardware-in-a-co-located-facility/\"\u003eyou can retrofit an existing 19\" rack\u003c/a\u003e, but it just seems unnecessary to us, especially when we consider the typical staff and skill sets in today's datacenter. Another challenge will be driving towards a true \"headless\" operational model - no dedicated management port, no integrated KVM, and a lack of documentation places this platform solely in the operational models of more advanced organizations (ie Facebook/Amazon). We are still at the bleeding edge, and it will be quite some time before this becomes a mainstream compute platform.\u003cbr\u003e\u003ch3\u003eThe Future Looks Bright\u003c/h3\u003eWe see Open Compute as being a major disruptive force to the traditional \"Big 3\" server vendors (HP, Dell, and IBM). Just look at the recent announcements of a potential sale of the x86 business at IBM to Lenovo - \u003ca href\u003d\"http://www.forbes.com/sites/kenrapoza/2013/04/21/lenovo-considers-taking-over-ibm-x86-server-business/\"\u003ethe writing is on the wall\u003c/a\u003e. The real winner in the commodity battle is going to look a lot more like the \"Walmart of IT\" (I'm looking at you Lenovo - managing efficient supply chain, leveraging buying power, and stringent supplier negotiation) vs. IBM/Oracle/EMC/Cisco (build software and hardware together and charge hefty margins). We've already seen a handful of our customers invest in fairly sizable OCP deployments in non-critical environments. It's only a matter of time before the operational challenges are solved, the supply chain is streamlined, and OCP becomes a mainstream server platform.\u003cbr\u003e\u003cbr\u003eA future with Open Compute provides IT Organizations choice, especially as next-generation software platforms make OCP consumable by the masses. The world is moving from being infrastructure-centric to application-centric. We see NodePrime as enabler of this transition - a world in which IT infrastructure is a true commodity, enabled by intelligent software.\u003cbr\u003e\u003cbr\u003eStay tuned for our next post as we dive into the technical details and opportunities presented by Open Compute to build out a cost-effective, easy to manage private cloud using NodePrime with OpenStack. \u003cbr\u003e\u003cdiv style\u003d\"clear:both;text-align:center\"\u003e\u003cimg border\u003d\"0\" src\u003d\"http://nodeprime.com/img/clear_pixel.gif?blog\u003d42213\" height\u003d\"0\" width\u003d\"0\"\u003e\u003c/div\u003e\u003cbr\u003e","categories":["Commodity","Facebook","OCP","Open Compute","SDDC"]},{"title":"The Decoupling of Software From Hardware","link":"http://nodeprime.blogspot.com/2013/04/the-decoupling-of-software-from-hardware.html","author":"James Malachowski","publishedDate":"Tue, 02 Apr 2013 11:11:00 -0700","contentSnippet":"I've been closely watching the Nebula team for the past two years, and it seems that today they have finally launched their ...","content":"I've been closely watching the Nebula team for the past two years, and it seems that today they have \u003ca href\u003d\"http://www.informationweek.com/cloud-computing/infrastructure/nebula-one-debuts-openstack-as-hardware/240152011\"\u003efinally launched their product\u003c/a\u003e. I love the vision of leveraging opensource software (ie OpenStack) and commodity hardware (ie OpenCompute) to build an enterprise-ready solution. The funny thing is, the core product they launched today is the antithesis to this vision - a tightly coupled hardware/software package, \u003ca href\u003d\"https://twitter.com/DerekAtDell/status/319093963527159808\"\u003eakin to something Oracle would build\u003c/a\u003e. Is it just me, or is this an anachronism in today's opensource, commoditized, consumerized IT?\u003cbr\u003e\u003ch3\u003eThe Hardware Addiction\u003c/h3\u003eWe are living in a material world. Not the \u003ca href\u003d\"http://en.wikipedia.org/wiki/Material_Girl\"\u003eMadonna song\u003c/a\u003e,  but a world in which we are generally tied to physical devices. I need  an iPhone/iPad to run Apple's iOS, I need a Cisco switch/router  to run Cisco's IOS, and I need a big expensive EMC SAN to have  \"enterprise\" storage with \"enterprise\" features. As everyone knows, with hardware comes margins,  only further compounded by access to cheap, unregulated labor in  overseas markets from companies like Foxconn. \u003cbr\u003e\u003cbr\u003eThis business model has been extremely successful - just look at \u003ca href\u003d\"http://www.thedailybeast.com/articles/2013/02/08/apple-has-137-billion-in-cash-shareholders-aren-t-pleased.html\"\u003eApple's fight over $137B\u003c/a\u003e cash they have hoarded. The ipad/iphone you're probably reading this on has extremely rich margins. Look at Oracle's new slogan resulting from the purchase of Sun - \"Hardware and Software, Engineered to Work Together\". While Dell, HP and others are struggling, the tightly coupled hardware + software vendors are running to the bank with your money.\u003cbr\u003e\u003cbr\u003eThere are several startups besides Nebula adopting this business model. Some other high-profile entrants include companies like Nutanix, Violin, and Simplivity to name a few. The real crazy thing is that they are doing great. Despite disruptive, high-profile technology trends like OpenFlow/SDN, Software-defined storage, and of course cloud computing, the enterprise is still severely addicted to the pre-packaged hardware/software appliance.\u003cbr\u003e\u003ch3\u003eWhy is This Happening?\u003c/h3\u003eIn the \u0026quot;pre-commodity\u0026quot; version of IT, buying an expensive, tightly coupled hardware/software appliance was the only way anything could work. Enterprise IT vendors had to spend millions of dollars on R\u0026amp;D to do things like prototype on FPGA\u0026#39;s to spin-up new ASIC designs. Cisco\u0026#39;s Catalyst 6K is the perfect example of how successful this business model could be. They sold billions of dollars worth of these systems because they were extremely reliable, and most importantly, no one got fired for buying Cisco as a result.\u003cbr\u003e\u003cbr\u003eWe still have an \"appliance hangover\", which I will define as a continued subconscious fear of reliability, security, and operational challenges associated with having a multi-vendor, commodity environment defined purely through software. This fear permeates itself through the slow adoption of cloud computing by the Enterprise ($55BN on x86 vs. 1.5BN on cloud computing services in 2012), as well as the continued adoption of proprietary hardware/software platforms (single-vendor, converged infrastructure, datacenter-in-a-box, etc). \u003cbr\u003e\u003cbr\u003eWith the rise of x86, and the continued acceleration of Moore's Law, we have gotten to the point that this design methodology of proprietary, customized circuits for specific use-cases was no longer cost-effective. It has become easier to simply write software to solve a specific problem and run it on x86. EMC does this today - your expensive storage appliance is really nothing but some carefully designed x86 compute platforms with a complex, proprietary software stack sitting on top of it. Network switching is currently experiencing the same \"white-box\" effect - the \u003ca href\u003d\"http://www.theregister.co.uk/2012/08/27/broadcom_trident_ii_switch_asic/\"\u003eoff-the-shelf Broadcom components\u003c/a\u003e were brought to market faster, and performed better than the proprietary ASIC\u0026#39;s Cisco was spending all their R\u0026amp;D money on.\u003cbr\u003e\u003ch3\u003eA Call For Standards\u003c/h3\u003eDespite all of the rapid innovation taking place, fragmented standards, and proprietary interfaces are still hampering the move to true commodity. Just look at the \u003ca href\u003d\"http://www.openflow.org/wp/openflow-components/\"\u003emultitude of opinions and conflicting standards around SDN/Openflow\u003c/a\u003e. Standards take time, and usually by the time they are defined, a new technology has emerged that makes the legacy standard irrelevant. OpenCompute, OpenStack, and SDN are all great, emerging standards that are moving us in the right direction. We need greater industry adoption and some new and exciting startups to establish these standards as mainstream, enterprise-ready, and supported so that they can be consumed to the benefit of Enterprise IT.","categories":[]},{"title":"Can Enterprise Software be Sexy?","link":"http://nodeprime.blogspot.com/2013/03/can-enterprise-software-be-sexy.html","author":"James Malachowski","publishedDate":"Tue, 05 Mar 2013 09:51:00 -0800","contentSnippet":"A Brief Update It has been several weeks since our last post, as it has been an extremely busy month here at NodePrime. We've ...","content":"\u003ch3\u003eA Brief Update \u003c/h3\u003eIt has been several weeks since our last post, as it has been an extremely busy month here at NodePrime. We've spent our first month in business heavily focused on product development, and spending time with our customers and partners to make sure we stay on the right path. Early discussions have been extremely encouraging and we really think we're on to something huge. It's a great feeling when a customer says things like \"I have been looking everywhere for this and no one is doing it\". Expect to see lots of exciting updates and big announcements from us over the next 6-8 weeks. Also a reminder, \u003ca href\u003d\"http://www.nodeprime.com/jobs.html\"\u003ewe are aggressively hiring software engineers\u003c/a\u003e (as is everyone else on the face of the earth - more on that later).\u003cbr\u003e\u003cbr\u003eSpeaking of product development, one thing we have really focused on is to build a beautiful product that people enjoy using. One of my favorite anecdotes about Steve Jobs was that \u003ca href\u003d\"http://www.cbsnews.com/8301-501203_162-3095726.html\"\u003ehe hated buttons\u003c/a\u003e. Every product he ever built, every retail store he ever opened, and even his trademark turtleneck sweaters reflect this mantra. Simple, clean equates to sexy, intuitive, beautiful. This is one of the key elements to Apple's design dominance over the last 10 years. By religiously following the \"say no to buttons\" doctrine, Apple's engineers were forced to focus on simplicity. \u003cbr\u003e\u003ch3\u003eSimple is Sexy\u003c/h3\u003eWe see this minimalist approach becoming even more relevant in today's mobile world. When faced with the reality of the small screen, we simply have no pixels to waste. Designers are forced to make trade-offs which ultimately lead to a much simpler end result.\u003cbr\u003e\u003cbr\u003eThere are really some beautiful apps out there. Some of my favorites - Uber, Mailbox, Do - what is it about these apps that make them shine? Why can't anyone seem to bring this type of experience to the enterprise? \u003cbr\u003e\u003ch3\u003e3 Simple Rules for Building Sexy Software\u003c/h3\u003e\u003col\u003e\u003cli\u003eLess is More\u003c/li\u003e\u003cli\u003eColor Matters\u003c/li\u003e\u003cli\u003eEveryone is a designer, everyone is a user \u003c/li\u003e\u003c/ol\u003e\u003ch3\u003ePresence Matters\u003c/h3\u003eConsumer is sexy by default. As a developer working on a consumer-focused platform, you  can tell your friends about it and they can go download it and use it. Developers today are like rock-stars - they want to write chart-topping pop songs. The overwhelming desire is to build something people care about and enjoy using.\u003cbr\u003e\u003cbr\u003eIf you are disrupting Oracle/SAP odds are your friends really don't  care. Not to mention, building enterprise software tends to be way more difficult than building the next consumer/social/collaborative-consumption service. Most talented developers I have met could build a clone of some of these services in a matter of days. Add in a few financially ridiculous exits like Instagram and suddenly the ability to recruit good talent at an enterprise software company becomes extremely challenging.\u003cbr\u003e\u003ch3\u003eWhat the %$@\u0026amp; are We Doing in the Enterprise?\u003c/h3\u003eI recently attended the \u003ca href\u003d\"http://techcrunch.com/events/crunchies-2012/event-info-2/\"\u003eCrunchies\u003c/a\u003e in San Francisco. There was plenty of the standard TechCrunch consumer fodder (Best Collaborative Consumption Service, Best Content Discovery Application, Best Time Sink, etc), but almost no Enterprise. Now that \u003ca href\u003d\"http://techcrunch.com/2012/08/05/the-rise-of-the-enterprise-startup-consumerization-and-clouds-open-the-door-disruption-closes-the-deal/\"\u003eEnterprise is hot again\u003c/a\u003e, I was surprised to see that the only relevant category that TechCrunch could come up with was \"Sexiest Enterprise Startup\". There was some relevant enterprise companies getting visibility - Palantir got runner-up for best startup of 2012, Github made its present felt, but other than that the sentiment was still heavily focused on the consumer side of Silicon Valley.\u003cbr\u003e\u003cbr\u003eFor a software platform to be considered \"Enterprise\" it  usually meant that the software needed to be \"Enterprise-Ready\". What  end users usually soon discover is that the real meaning of  \"enterprise-ready\" is \"complicated and expensive\" and in some cases  \"doesn't work\".\u003cbr\u003e\u003cbr\u003eThink of a few horribly clunky apps that you've probably used at your day job in the last few years if you work at a Fortune 1000 (ie Enterprise) company. Some of my least-favorite include Concur, SAP, BMC Remedy, Microsoft Outlook, and Microsoft Sharepoint. How often have they crashed, timed-out, or put you in a situation where you had no idea how to do a simple task? Even worse, you are usually imprisoned by your organization and forced to use these tools because they are \"secure\" or \"that's what we've always used\". \u003cbr\u003e\u003ch3\u003e3 Rules for Building Awful Enterprise Software\u003c/h3\u003e\u003col\u003e\u003cli\u003eSolution through acquisition - rather than build it, lets buy it and mask it as a suite/bundle \u003c/li\u003e\u003cli\u003eFocus on intellectual property - closed interfaces prevent extensibility and destroy innovation\u003c/li\u003e\u003cli\u003eSmall budgets, small talent - don\u0026#39;t spend on R\u0026amp;D and rest on your brand\u003c/li\u003e\u003c/ol\u003e\u003ch3\u003eThere is Hope, and a Trillion Dollar Opportunity\u003c/h3\u003eWe are trying to change all of these common stereotypes about enterprise software - that its big, complicated, ugly and doesn't work. We believe we can change these perceptions and that enterprise software can be sexy. When we set out to build NodePrime, our key mission was to deliver the Apple experience to Enterprise IT. If you thought some of the apps I discussed above are hideous, you wouldn't believe the tools and applications our customers are forced to use, simply because they have no alternative.\u003cbr\u003e\u003cbr\u003eThe opportunity is massive - just look at \u003ca href\u003d\"http://techcrunch.com/2013/01/19/the-changing-of-the-enterprise-guard/\"\u003esome of the recent posts from thought leaders like Aaron Levie\u003c/a\u003e. What Box is doing is great, but at the end of the day they are just changing the consumption model for the vaunted Microsoft suite. Huge market, but only a tiny sliver of the pie. What about SAP? BMC Remedy? IBM websphere? These companies make billions off of these systems that are extremely complicated, out-dated and don't scale or offer up the user experience the next generation of business users now expect. The timing to get into enterprise software and take advantage of this shift couldn't be better.\u003cbr\u003e\u003cbr\u003eAs a reminder, \u003ca href\u003d\"http://www.nodeprime.com/jobs.html\"\u003ewe're hiring\u003c/a\u003e. We are working with some amazing companies that are disrupting the delivery and operation of large-scale infrastructure. If you're a rock-star developer interested in redefining Enterprise Software and enjoy writing #1 hits, \u003ca href\u003d\"http://www.nodeprime.com/jobs.html\"\u003econtact us\u003c/a\u003e.","categories":[]},{"title":"Inception - Has Virtulization Become a Dream Within a Dream?","link":"http://nodeprime.blogspot.com/2013/02/inception-has-virtulization-become.html","author":"James Malachowski","publishedDate":"Fri, 08 Feb 2013 15:54:00 -0800","contentSnippet":"We finally, really did it. I was having a customer discussion recently around cloud portability and security, and the customer ...","content":"We finally, \u003cu\u003ereally\u003c/u\u003e did it. I was having a customer discussion recently around cloud portability and security, and the customer mentioned they are considering running hypervisors in the cloud to solve the problem. Makes sense if your operational inefficiencies and desire for cloud portability outweigh the additional overhead this architecture will present, but generally this is not practical or scalable long-term. Sure enough, a company \u003ca href\u003d\"http://www.networkworld.com/news/2013/020613-hypervisor-266461.html\"\u003eRavello Systems just raised $26M to build software that solves this problem.\u003c/a\u003e The problem with all of this is the acceleration of greater levels of complexity and abstraction. More on this below... \u003cbr\u003e\u003ch3\u003eServers Are Like Cars?\u003c/h3\u003eFor those of you that have no idea what I am talking about, virtualization is like the carpool lane for the datacenter. In the late 90's and early 2000's our applications were \"driving to work\" each in their own car, in their own lane entirely by themselves. Over years and years the \"cars\" (servers) got larger and more powerful to the point that every application was essentially driving the server equivalent of a school bus - extremely inefficient and expensive.\u003cbr\u003e\u003cbr\u003eVMware came along and gave all of these applications software that allows them to drive together in the same car. This was such a game changing technology, that it forced everyone to re-think how they built \"cars\" and \"highways\". Vendors that were used to selling lots and lots of \"cars\" and \"highways\"  (im looking at you Cisco) had to find new ways to maintain revenues. The result was build them bigger, faster, stronger. Suddenly everyone was supposed to buy a bus that could drive 200mph (Moore's law) on a highway with huge lanes (did we really need 10gig at the access layer?) to accommodate them. The arms race had officially begun... \u003cbr\u003e\u003ch3\u003eA Technology Arms Race\u003c/h3\u003eVMware realized as the cars got bigger and faster, the carpool lane was going to have way fewer cars in it. VMware was forced to rethink the \"carpool tax\" to maintain growth and revenues to the great dismay of their customers (\u003ca href\u003d\"http://www.informationweek.com/cloud-computing/infrastructure/vmware-focuses-on-private-cloud-dumps-un/240006318\"\u003eread VMware licensing\u003c/a\u003e).\u003cbr\u003e\u003cbr\u003eCisco also realized that there were going to be fewer cars on the highway, so there would be less need for new highways and new lanes. So they came up with this thing called the \u003ca href\u003d\"http://www.cisco.com/en/US/products/ps9902/index.html\"\u003eNexus 1000V\u003c/a\u003e (a virtual switch) and the \u003ca href\u003d\"http://www.cisco.com/en/US/prod/collateral/ps10265/ps10280/data_sheet_c78-525049.html\"\u003ePalo network adapter\u003c/a\u003e (a virtual network interface card) which was basically like giving everyone inside the car their own doors (imagine for a second a 50 person bus with 50 doors).\u003cbr\u003e\u003cbr\u003eEMC thought, \"great, people will need tons of gas (ie monolithic storage) to make these 50 door buses fly down the highway at 200mph\". But that wasn't enough, now that we've virtualized the server and the network, we might as well virtualize the storage. \u003cbr\u003e\u003ch3\u003eBuilding a Dream Within a Dream\u003c/h3\u003eIn theory all of this sounds awesome - complete infrastructure layer abstraction that exposes \"pools of resources\" of compute, network and storage to the applications and organizations that require them. This should make things simpler, easier to manage, quicker to market, etc. If it was only that simple.\u003cbr\u003e\u003cbr\u003eThe problem is that we've built a house of cards. Poorly design, remove or damage any layer in the stack and the entire thing can collapse. Even worse, the abstraction has dissolved any opportunity to understand and correct any problems with the underlying infrastructure (when AWS goes down, what can you do but wait for it to come back?). Oracle, Cisco, VCE and others understand this inherent complexity - hence the \"solution\" sale - hardware and software bundled to work together. Its the only way they can find to make any of this work reliably. \u003cbr\u003e\u003ch3\u003eKeep it Simple\u003c/h3\u003eWhen my \u003ca href\u003d\"http://www.linkedin.com/in/nathanrockhold\"\u003eCo-Founder\u003c/a\u003e and I first sat down and discussed starting our own company, one of the key problem statements we wanted to solve for was the unneeded complexity the \"technology arms race\" had created. Every piece of technology we had touched in Enterprise IT over our careers was either complex and bloated with legacy operational models, or built with the vendor's needs in mind (and not the customer's).\u003cbr\u003e\u003cbr\u003eWe believe the next trend in Enterprise IT is going to be around simplification and openness (in fact its already started, and its completely independent of cloud/hybrid/IaaS/PaaS/whatever). Our customers have been paying a premium for far too long. Community software projects are maturing and even exceeding the capabilities of their proprietary counterparts. \u003ca href\u003d\"http://www.theregister.co.uk/2013/01/29/vmware_q4_2012_numbers_layoffs/\"\u003eThe big guys are struggling\u003c/a\u003e. Its time to collapse the dreams within dreams and and get back to reality.\u003cbr\u003e\u003cbr\u003e","categories":[]},{"title":"The Evolution of Enterprise IT: Choice","link":"http://nodeprime.blogspot.com/2013/02/the-evolution-of-enterprise-it-choice.html","author":"James Malachowski","publishedDate":"Wed, 06 Feb 2013 09:51:00 -0800","contentSnippet":"I recently watched a fascinating movie called Waking Life. The movie is basically a series of thought exercises around human ...","content":"I recently watched a fascinating movie called \u003ca href\u003d\"http://www.imdb.com/title/tt0243017/\"\u003eWaking Life\u003c/a\u003e. The movie is basically a series of thought exercises around human existence, told through a dream sequence. There is a great scene where one of the people he interviews is discussing the exponential pace of human evolution. The argument centers around the theory that technology has compressed the pace of evolution to less than a generation. Evolution is no longer a result of genetic interactions, but interactions in technology and information. \u003cbr\u003e\u003cbr\u003eWe are presented with this same compressed evolutionary pace with enterprise technology. We had mainframes for decades, then came client/server/x86, server virtualization, cloud, big data, software-defined networking, storage virtualization, consumerization and so on. While I agree that some of these concepts are the result of big-budget marketing dollars, many of these technologies have represented true paradigm shifts in the industry, and they are happening more frequently then ever.\u003cbr\u003e\u003cbr\u003eLet's talk about storage for instance. Traditionally the bane of IT - extremely expensive, difficult to manage, and yet mission-critical. EMC, Hitachi and others have capitalized on this for decades and made handsome profits for their share holders. Nothing has been more profitable over the last several decades then bundled hardware and software. Then comes Nicira/OpenFlow/SDN. VMware thinks \"great, we've been doing the software-defined datacenter thing for years, lets capitalize on this market trend\". What they didn't foresee is what this will mean for their majority share holder, EMC. Software-defined storage is now dramatically disrupting the traditional monolithic, shared storage space - just look at companies like Nexenta, Fusion IO, and the plethora of new startups entering this space.\u003cbr\u003e\u003cbr\u003eWhat this is really all about is choice. For the first time in history customers can decouple the hardware from the software. In the traditionally risk-averse existence that is information technology, companies like Oracle have done a great job selling against this fear and presenting the \"hardware and software engineered to work together\" story. Its a great story that unfortunately still has merit - database systems are extremely complicated and mission critical, and for some organizations there is value in piece of mind.\u003cbr\u003e\u003cbr\u003eIt is an exciting time to be in this industry and I look forward to seeing what new choices present themselves in enterprise IT.","categories":[]}]}}, "responseDetails": null, "responseStatus": 200})