getFeedData({"responseData": {"feed":{"feedUrl":"http://www.nathanrockhold.com//feeds/posts/default","title":"Nathan Rockhold's Technobabblelog","link":"http://www.nathanrockhold.com/","author":"Nathan Rockhold","description":"","type":"atom10","entries":[{"title":"Manage at scale","link":"http://www.nathanrockhold.com/2012/10/manage-at-scale.html","author":"Nathan Rockhold","publishedDate":"Mon, 29 Oct 2012 17:47:00 -0700","contentSnippet":"In today’s Data Centers it’s becoming more and more complex to manage servers at scale.  The enormous number of servers used in ...","content":"\u003cbr\u003eIn today’s Data Centers it’s becoming more and more complex to manage servers at scale.  The enormous number of servers used in the Hyperscale Data Center presents some unique problems in the areas of server manageability. Different server platform vendors offer a wide and rich variety of platform manageability features and interfaces for managing many different classes of servers in many application environments. The goal of covering a broad range of server applications along with a desire for feature differentiation across vendors has led to an explosion of the manageability features that are available.\u003cbr\u003e\u003cbr\u003eEvery Hyperscale Data Center customer see this as problematic. The breadth and complexity of the vendor offerings often means that these Data Centers need to invest time developing expertise in understanding and maintaining each different vendor's system management. Different server vendor’s solutions are often tied to requiring vendor-specific management console software, agents, drivers, and utilities that are required to provision and utilize the management capabilities. Features are added and changed with each new platform generation, often resulting in a need for software updates. In addition, many of the vendor’s management consoles have interactive interfaces with little to no command line interfaces or APIs that are not well suited to the scale of these data centers.\u003cbr\u003e\u003cbr\u003eThe presence of a large number of features that are not needed nor utilized by Hyperscale Data Centers is viewed as adding unnecessary cost and complexity and decreasing the reliability of the solution. When there is a degree of commonality in the features that Hyperscale Data Center customers care about, those features are often implemented in a non-interoperable manner across vendors. Capabilities also vary across different platforms from the same vendor. Vendors are not implementing certain subsets of management technologies or even worse improperly implementing them.\u003cbr\u003e\u003cbr\u003eMany Hyperscale Data Center customers also desire the capability to readily create and integrate the platform management solutions with their own management software and architectures. The ability to develop custom software for managing their systems not only enables the Hyperscale Data Center to tailor manageability to their needs, but is often considered an area of expertise and differentiation among competing Data Centers.\u003cbr\u003e\u003cbr\u003eHowever, the interface technologies used across different vendors are complex, requiring Hyperscale Data Centers to climb a steep learning curve and develop local experts who understand the protocols, structures, and data models.\u003cbr\u003e\u003cbr\u003eIn some cases the platform management interfaces are proprietary and accessing them directly requires the Hyperscale Data Center to obtain special licensing or enter confidentiality agreements in order to get the documentation needed to access the capabilities. Often, vendors do not support direct access to their management capabilities, but instead require the customer to go through an intermediate driver API or console plug-in, or other software from the platform vendor. This has impeded the ability for Hyperscale Data Center customers to develop, deploy, and maintain their environments.\u003cbr\u003e\u003cbr\u003eThe existing solutions have had impact on the server platform vendors as well. The breadth and constant evolution of features have increased the platform cost, only to deliver features that many customers do not need. The lack of a simple and interoperable interfaces and capabilities has required substantial development investments in maintaining and supporting those solutions with their Hyperscale Data Center customers.\u003cbr\u003e\u003cbr\u003eThe Data Center Manageability Interface (DCMI) specification explicitly addresses the unique requirements of server platform management within Hyperscale Data Centers where large numbers, into the tens of thousands, of servers are deployed. This specification seeks to help Hyperscale Data Centers reduce the cost and complexity of server platform management by defining a concise set of platform monitoring and control capabilities to deliver reliable, stable, interoperable, cross-vendor manageability targeted to the needs of this segment.\u003cbr\u003e\u003cbr\u003eDCMI defines the manageability requirements as a set of standard manageability features and interfaces. By using IPMI 2.0 as the basis, DCMI implementations can take advantage of the existing industry infrastructure of IPMI management controllers, firmware, and expertise. In many cases, the server platform hardware support for DCMI is already present and only the management controller's firmware needs to be changed to support DCMI.\u003cbr\u003e\u003cbr\u003eThe capabilities of DCMI are available to both local and remote management software. The standard specifies the following capabilities: standardized local and remote interfaces; platform power control; baseline sensors; platform identification; improved sensor access; authentication, integrity and confidentiality; and platform event logging.\u003cbr\u003e\u003cbr\u003eThe primary difference between DCMI and other specifications is that DCMI was originated and designed expressly for the platform manageability needs of Hyperscale Data Center servers, as specified by Hyperscale Data Center manageability users themselves.  DCMI references the existing IPMI 2.0 specification as much as possible, mainly providing a tighter definition and clarification about which IPMI 2.0 capabilities are mandatory for Hyperscale Data Center servers. In order to improve interoperability, DCMI minimizes the number of optional capabilities in the specification.\u003cbr\u003e\u003cbr\u003eIn addition, DCMI defines a small number of DCMI-specific functions to address some specific Hyperscale Data Center requirements that were not comprehended in IPMI 2.0. These extensions provide a reduction in the number of commands needed to complete certain manageability operations, such as querying for capabilities, accessing sensor information, etc., and enabling management applications to identify DCMI-based systems.\u003cbr\u003e\u003cbr\u003eMy next post I will discuss some specifics of how to use this specification and what it could mean to your data centers. \u003cbr\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","categories":[]},{"title":"IPMI","link":"http://www.nathanrockhold.com/2012/09/ipmi.html","author":"Nathan Rockhold","publishedDate":"Wed, 05 Sep 2012 21:10:00 -0700","contentSnippet":"\ufeffMost of us systems engineers/admins have heard of IPMI (Intelligent Platform Management Interface) and chances are we look at ...","content":"\u003cb style\u003d\"font-weight:normal\"\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\ufeffMost of us systems engineers/admins have heard of IPMI (Intelligent Platform Management Interface) and chances are we look at it as no more than a means of powering off and on a given node. But the truth is it’s so much more powerful than most think.  If you had the time to explore it you would find the wonders that await you.  Since I’m sure you don’t have the time I will help you get up to speed.\u003c/span\u003e\u003c/b\u003e\u003cbr\u003e\u003cdiv style\u003d\"color:#333333;line-height:19.200000762939453px;text-align:justify\"\u003e\u003cb style\u003d\"color:black;font-weight:normal;line-height:normal;text-align:start\"\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eHere are the basics.  Today most servers have a Baseboard Management Controller, or BMC for short.  The BMC is the intelligence in the IPMI architecture. It is a specialized microcontroller embedded on the motherboard of a server. The BMC manages the interface between system management software and platform hardware.  Different types of sensors built into the computer system report to the BMC on parameters such as temperature, cooling fan speeds, power status, operating system (OS) status, etc. The BMC monitors the sensors and can send alerts to a system administrator via the network if any of the parameters do not stay within preset limits, indicating a potential failure of the system. The BMC, therefore, has access to all the various sensors on a given system and therefore is rich with useful data. \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe most common way in which to retrieve that data is via IPMI. IPMI can be accessed in several ways, these methods are refered to as \"channels\", as in communications channels. The two most common are via the LAN (\"lan\") or if your OS has an BMC driver via the local device (i.e. \"/dev/ipmi0\"). \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eNow, to exploit those channels the most common method is to use the Open Source \"ipmitool\". This tool is found included with most OS's or can be downloaded on the IPMItool SourceForge page.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eFirst to clear up a common misconception lets look at Dell PowerEdge servers. Many administrators are convinced that you need a Dell Remote Access Controller, iDRAC, in order to use IPMI. Simply put you do not. Service Processors or Dell\u0026#39;s DRAC, are not BMC\u0026#39;s, rather they are mini-computers on a the board typically running Linux.  They are most commonly powered by \u0026quot;trickle\u0026quot; or \u0026quot;standby\u0026quot; power such that they are running even if the systme is not running. These cards simply act as a pipe to access the BMC and other functions of the system. The web interfaces on the SP\u0026#39;s, for instance, commonly are just passing IPMI commands back to the BMC. Thus, if you click \u0026quot;Power On\u0026quot; in the SP web interface your really just sending an IPMI \u0026quot;power on\u0026quot; command to the BMC. The point is, you do not need an SP to use IPMI with a system! \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe caveat is, depending on the architecture of the system, you may require an SP to talk to the BMC if the system is not running. For instance, on a Dell PowerEdge you can talk IPMI to the BMC without a DRAC by sharing the first gigabit port, meaning that you really don\u0026#39;t need a DRAC at all.  To keep going with the Dell example, if you SSH onto a iDRAC and type, connect com2, to do serial redirection, you\u0026#39;re actually doing a local IPMI Serial-over-LAN session, you’re just doing it inside the chassis.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eNow that we know a little bit about IPMI. What can we do with it? Most people are familiar with this:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool power status\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eChassis Power is on\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool chassis status\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSystem Power         : on\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Overload       : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Interlock      : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMain Power Fault     : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Control Fault  : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Restore Policy : previous\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eLast Power Event     : \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eChassis Intrusion    : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFront-Panel Lockout  : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDrive Fault          : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCooling/Fan Fault    : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSleep Button Disable : not allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDiag Button Disable  : allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eReset Button Disable : not allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Button Disable : allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSleep Button Disabled: false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDiag Button Disabled : true\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eReset Button Disabled: false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Button Disabled: false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool chassis power cycle\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eIn the above examples I\u0026#39;m using the local bmc communications channel. The command power is actually a shortcut for chassis power, so ipmtool power cycle and ipmitool chassis power cycle are the same thing. When the -I channel  attribute is not specified the local bmc channel is used by default. Here is a LAN example. \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool -I lanplus -H 192.168.0.30 -U root -f /ipmi.pass power status\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eChassis Power is on\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool -I lanplus -H 10.0.50.60 -U root -f /ipmi.pass chassis status\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSystem Power         : on\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Overload       : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Interlock      : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMain Power Fault     : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Control Fault  : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Restore Policy : previous\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eLast Power Event     : \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eChassis Intrusion    : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFront-Panel Lockout  : inactive\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDrive Fault          : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCooling/Fan Fault    : false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSleep Button Disable : not allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDiag Button Disable  : allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eReset Button Disable : not allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Button Disable : allowed\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSleep Button Disabled: false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDiag Button Disabled : true\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eReset Button Disabled: false\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Button Disabled: false\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe syntax above is fairly straightforward. I\u0026#39;m using the lanplus channel.  The lan channel is for IPMI 1.5 commands, whereas lanplus is for IPMI 2.0 RMCP+.  The -H specifies the IP address of the IPMI interface, -U is the IPMI user. In recent releases of ipmitool the -P password option has been replaced with -f /file, the file contains the password in plaintext, however this ensures that the IPMI password isn\u0026#39;t viewable via a process listing which is seen via \u0026quot;ps -ef\u0026quot; or the SNMP process tables. The default password on Dell PowerEdge servers is calvin and the user is root.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eWhat else might you find interesting? There are two really interesting things to look at. \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe first is the Sensor Data Repository (SDR). Here you will find thresholds and values for all the available sensors. Here is an example on a Dell R610:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool sdr elist\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 01h | ok  |  3.1 | -66 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 02h | ok  |  3.2 | -65 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 05h | ok  | 10.1 | 42 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eAmbient Temp     | 07h | ok  | 10.1 | 34 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 06h | ok  | 10.2 | 42 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eAmbient Temp     | 08h | ok  | 10.2 | 32 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eAmbient Temp     | 0Eh | ok  |  7.1 | 20 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePlanar Temp      | 0Fh | ok  |  7.1 | 45 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCMOS Battery     | 10h | ok  |  7.1 | \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVCORE PG         | 12h | ok  |  3.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVCORE PG         | 13h | ok  |  3.2 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eIOH THERMTRIP    | 5Dh | ns  |  7.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.5V PG          | 17h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.8V PG          | 18h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e3.3V PG          | 19h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e5V PG            | 1Ah | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e0.75VTT PG       | 14h | ok  |  3.2 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePFault Fail Safe | 5Fh | ns  |  7.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eHEATSINK PRES    | 52h | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eiDRAC6 Ent PRES  | 70h | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eUSB CABLE PRES   | 59h | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSTOR ADAPT PRES  | 5Ah | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eRISER2 PRES      | 5Bh | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eRISER1 PRES      | 5Ch | ok  |  7.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e0.75 VTT PG      | 15h | ok  |  3.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMEM PG           | 1Bh | ok  |  3.2 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMEM PG           | 1Eh | ok  |  3.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e0.9V PG          | 21h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVTT PG           | 1Fh | ok  |  3.2 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVTT PG           | 20h | ok  |  3.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.8 PLL PG       | 22h | ok  |  3.2 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.8 PLL PG       | 24h | ok  |  3.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e8.0V PG          | 25h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.1V PG          | 28h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.0V LOM PG      | 29h | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.0V AUX PG      | 2Ah | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e1.05V PG         | 2Bh | ok  |  7.1 | State Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 1A RPM   | 30h | ok  |  7.1 | 4560 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 2A RPM   | 31h | ok  |  7.1 | 4560 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 3A RPM   | 32h | ok  |  7.1 | 4560 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 4A RPM   | 33h | ok  |  7.1 | 4560 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 5A RPM   | 34h | ok  |  7.1 | 4440 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 6A RPM   | 35h | ok  |  7.1 | 4320 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 1B RPM   | 36h | ok  |  7.1 | 3120 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 2B RPM   | 37h | ok  |  7.1 | 3120 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 3B RPM   | 38h | ok  |  7.1 | 3120 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 4B RPM   | 39h | ok  |  7.1 | 3240 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 5B RPM   | 3Ah | ok  |  7.1 | 3000 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFAN MOD 6B RPM   | 3Bh | ok  |  7.1 | 3240 RPM\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePresence         | 50h | ok  |  3.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePresence         | 51h | ok  |  3.2 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePresence         | 54h | ok  | 10.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePresence         | 55h | ok  | 10.2 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePresence         | 56h | ok  | 26.1 | Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eStatus           | 60h | ok  |  3.1 | Presence detected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eStatus           | 61h | ok  |  3.2 | Presence detected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eStatus           | 64h | ok  | 10.1 | Presence detected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eStatus           | 65h | ok  | 10.2 | Presence detected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eRiser Config     | 66h | ok  |  7.1 | Connected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eOS Watchdog      | 71h | ok  |  7.1 | \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSEL              | 72h | ns  |  7.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eIntrusion        | 73h | ok  |  7.1 | \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePS Redundancy    | 74h | ok  |  7.1 | Fully Redundant\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFan Redundancy   | 75h | ok  |  7.1 | Fully Redundant\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCPU Temp Interf  | 76h | ns  |  7.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDrive            | 80h | ok  | 26.1 | Drive Present\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCable SAS A      | 90h | ok  | 26.1 | Connected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCable SAS B      | 91h | ok  | 26.1 | Connected\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eDKM Status       | A0h | ok  |  7.1 | \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eECC Corr Err     | 01h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eECC Uncorr Err   | 02h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eI/O Channel Chk  | 03h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePCI Parity Err   | 04h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePCI System Err   | 05h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSBE Log Disabled | 06h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eLogging Disabled | 07h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eUnknown          | 08h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCPU Protocol Err | 0Ah | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCPU Bus PERR     | 0Bh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCPU Init Err     | 0Ch | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCPU Machine Chk  | 0Dh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory Spared    | 11h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory Mirrored  | 12h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory RAID      | 13h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory Added     | 14h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory Removed   | 15h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMemory Cfg Err   | 16h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem Redun Gain   | 17h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePCIE Fatal Err   | 18h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eChipset Err      | 19h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eErr Reg Pointer  | 1Ah | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem ECC Warning  | 1Bh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem CRC Err      | 1Ch | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eUSB Over-current | 1Dh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePOST Err         | 1Eh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eHdwr version err | 1Fh | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem Overtemp     | 20h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem Fatal SB CRC | 21h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMem Fatal NB CRC | 22h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eOS Watchdog Time | 23h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eNon Fatal PCI Er | 26h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eFatal IO Error   | 27h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eMSR Info Log     | 28h | ns  | 34.1 | Disabled\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 0Ah | ok  |  8.1 | 26 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 0Bh | ok  |  8.1 | 28 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eTemp             | 0Ch | ucr |  8.1 | 48 degrees C\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCurrent          | 94h | ok  | 10.1 | 0.60 Amps\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCurrent          | 95h | ok  | 10.2 | 0.40 Amps\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVoltage          | 96h | ok  | 10.1 | 116 Volts\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eVoltage          | 97h | ok  | 10.2 | 116 Volts\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSystem Level     | 98h | ok  |  7.1 | 140 Watts\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003ePower Optimized  | 99h | ok  |  7.1 | OEM Specific\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eROMB Battery     | 11h | ok  | 26.3 | \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003evFlash           | D3h | ok  | 11.2 | \u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eYou can see that some of these are boolean failure warnings. By using the elist option the status is de-referenced, so we can see that its set as Predictive Failure Deasserted.  As with out the elist option this reports as 0x01. The fans, however output the speed and the temp sensors output the current reading.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eWhile a full dump of the sensor repository is neat to look at.  You might want to pick values for practical purposes such as monitoring. For instance, lets get the systems current that is being drawn using sdrs sister command sensor:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool sensor reading 'Current'\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eCurrent          | 0.600\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eIf we want to feed this value to our monitoring application, such as Zabbix, Nagios, Cacti, and friends, we just parse that to display only the value, and we're good to go:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool sensor reading 'Current' | awk '{print $3}'\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e0.600\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eWe can apply the same method to anything else in the SDR, allowing us to create pretty graphs and useful alerts based on voltages, fan speed, temperatures, or failure warnings. If you want greater clarity into a given sensor item, use \"sensor get\", example:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool sensor get \u0026#39;Current\u0026#39;  \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eLocating sensor record...\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003eSensor ID              : Current (0x94)\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Entity ID             : 10.1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Sensor Type (Analog)  : Current\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Sensor Reading        : 0.600 (+/- 0) Amps\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Status                : ok\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Sensor Threshold Settings not available\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Assertion Events      : \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e Assertions Enabled    :\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThis output helps clarify more explicitly the various thresholds, this information is also useful to you monitoring or reporting solution. Spend some time on your platform playing with the sd\" and sensor commands.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe second important feature is the System Event Log (SEL), it is exactly what you think it is:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool sel elist\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   1 | 02/01/2012 | 05:14:44 | Event Logging Disabled SEL | Log area reset/cleared | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   2 | 02/14/2012 | 01:29:33 | Drive Slot #0x81 | Drive Present | Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   3 | 02/14/2012 | 01:29:39 | Drive Slot Drive | Drive Present | Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   4 | 02/14/2012 | 01:30:05 | Drive Slot Drive | Drive Present | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   5 | 02/14/2012 | 01:30:05 | Drive Slot #0x81 | Drive Present | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   6 | Pre-Init Time-stamp   | Physical Security Intrusion | General Chassis intrusion | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   7 | Pre-Init Time-stamp   | Physical Security Intrusion | General Chassis intrusion | Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   8 | 05/31/2012 | 20:28:02 | Physical Security Intrusion | General Chassis intrusion | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   9 | Pre-Init Time-stamp   | Physical Security Intrusion | General Chassis intrusion | Asserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   a | Pre-Init Time-stamp   | Physical Security Intrusion | General Chassis intrusion | Deasserted\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e   b | 08/20/2012 | 10:04:27 | Temperature #0x30 | Upper Critical going high\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eSo here we see this event history of our system. Most popular system’s firmware use this event log to send warnings.  For instance if you want to clear a mysterious warning light on a Dell\u0026#39;s chassis just clear the SEL.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eThe SEL's best friend is Platform Event Filtering (PEF). Here we can create rules which dictate the alerting policy. When a given event occurs that matches a PEF rule, an alert in the form of an SNMP trap is sent, which is called a Platform Event Trap or PET. The default event rules list is as follows on Dell R610:\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool pef list  \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 1 | active | 0x11 | Fan | Any | Critical | Threshold | (0x01/0x0004),\u0026lt;LC | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 2 | active | 0x11 | Fan | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 3 | active | 0x11 | Battery | Any | Warning | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 4 | active | 0x11 | Battery | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 5 | active | 0x11 | Battery | Any | Critical | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 6 | active | 0x11 | Battery | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 7 | active | 0x11 | Voltage | Any | OK | Discrete | (0x03/0x0001),state deasserted | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 8 | active | 0x11 | Voltage | Any | Critical | Discrete | (0x03/0x0002),state asserted | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 9 | active | 0x11 | Temperature | Any | Warning | Threshold | (0x01/0x0081),\u0026lt;LNC,\u0026lt;UNC | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 10 | active | 0x11 | Temperature | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 11 | active | 0x11 | Temperature | Any | Critical | Threshold | (0x01/0x0204),\u0026lt;LC,\u0026lt;UC | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 12 | active | 0x11 | Temperature | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 13 | active | 0x11 | Chassis Intrusion | Any | Critical | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 14 | active | 0x11 | Chassis Intrusion | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 15 | active | 0x11 | Any | Any | Warning | Discrete | (0x0b/0x0004),redundancy degraded | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 16 | active | 0x11 | Any | Any | Critical | Discrete | (0x0b/0x0002),redundancy lost | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 17 | active | 0x11 | Any | Any | OK | Discrete | (0x0b/0x0001),fully redundant | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 18 | active | 0x11 | Processor | Any | Warning | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 19 | active | 0x11 | Processor | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 20 | active | 0x11 | Processor | Any | Critical | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 21 | active | 0x11 | Processor | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 22 | active | 0x11 | Processor | Any | OK | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 23 | active | 0x11 | Processor | Any | Critical | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 24 | active | 0x11 | Power supply | Any | Warning | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 25 | active | 0x11 | Power supply | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 26 | active | 0x11 | Power supply | Any | Critical | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 27 | active | 0x11 | Power supply | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 28 | active | 0x11 | Power supply | Any | OK | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 29 | active | 0x11 | Power supply | Any | Critical | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 30 | active | 0x11 | Logging disabled | Any | Critical | Discrete | Sensor-specific | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 31 | active | 0x11 | Watchdog 2 | Any | Critical | Discrete | Any | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 32 | active | 0x11 | Current | Any | Warning | Threshold | (0x01/0x0081),\u0026lt;LNC,\u0026lt;UNC | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 33 | active | 0x11 | Current | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 34 | active | 0x11 | Current | Any | Critical | Threshold | (0x01/0x0204),\u0026lt;LC,\u0026lt;UC | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 35 | active | 0x11 | Current | Any | OK | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 36 | active | 0x11 | Module/board | Any | Information | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 37 | active | 0x11 | Module/board | Any | Information | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 38 | active | 0x11 | Module/board | Any | Critical | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 39 | active | 0x11 | Module/board | Any | Warning | OEM | OEM | Alert | 1\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 40 | inactive\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eBut where do these traps go?  Thats defined by the PEF policy which is commonly configured via your SP, in the case of Dell you can do this in the BIOS or the iDRAC web interface.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool -pef \u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e 0x51 | 40 | 8 | 44454c4c-4700-1046-8034-c2c04f4b4e31 | Alert,Power-off,Reset,Power-cycle,OEM-defined\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eWhile these two, SDR and SEL, are extremely useful there is one more IPMI feature that you may not even be aware of, i.e., Serial over LAN,or SOL for short.  It does what it sounds like, console serial redirection via IPMI over the LAN.  This means that in systems that once required a console server that was physically connected to each server\u0026#39;s serial port can now be access simply using ipmitool.  This feature was introduced in IPMI v1.5 and almost all modern generation servers support it and, as noted earlier, some SP\u0026#39;s console redirection such as iDRAC’s connect com2\u0026#39; is in fact IPMI SOL in disguise.\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Courier New,Courier,monospace;font-size:x-small\"\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e# ipmitool -I lanplus -H 191.268.0.30 -U root -f /ipmi.pass sol activate\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e[SOL Session operational.  Use ~? for help]\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"vertical-align:baseline;white-space:pre-wrap\"\u003e#  \u0026lt;-- this is a console prompt\u003c/span\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003e\u003c/span\u003e\u003cbr\u003e\u003cspan style\u003d\"font-family:Arial;font-size:15px;vertical-align:baseline;white-space:pre-wrap\"\u003eI hope this gives you a new handle for just what IPMI can do for you and how you might be able to exploit it.  In many cases its there, right now, waiting to be used on your servers, just because you didn\u0026#39;t assign an IP address doesn\u0026#39;t mean you can\u0026#39;t use it, so please install IPMItool and give it a shot.  If you had to buy servers without a iDRAC  don’t worry you\u0026#39;re not missing out.\u003c/span\u003e\u003c/b\u003e\u003c/div\u003e","categories":[]}]}}, "responseDetails": null, "responseStatus": 200})